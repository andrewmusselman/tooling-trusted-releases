FROM python:3.13.2-alpine3.21 AS builder

ENV PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    PYTHONUNBUFFERED=1 \
    UV_VERSION=0.7.19

RUN apk update && \
    apk add --no-cache \
      make \
      git

RUN pip3 install uv==${UV_VERSION}

# use the same workdir as in the final image
# as the created venv will use that path
WORKDIR /opt/atr

COPY . .

# only install runtime dependencies
RUN make sync

# generate a version.py module from git information
RUN make generate-version

# final image
FROM python:3.13.2-alpine3.21

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Set JAVA_TOOL_OPTIONS to limit memory usage
ENV JAVA_TOOL_OPTIONS="-XX:MaxMetaspaceSize=32m -Xmx128m -XX:+UseSerialGC -XX:MaxRAM=256m -XX:CompressedClassSpaceSize=16m"

# go is required for syft
# openjdk8 is required for Apache RAT
RUN apk update && \
    apk add --no-cache \
      bash \
      curl \
      file \
      git \
      gpg \
      gpg-agent \
      make \
      nix \
      openjdk8 \
      rsync \
      subversion

WORKDIR /opt/atr

# copy app and wheels from builder
COPY --from=builder /opt/atr/.venv ./.venv
COPY --from=builder /opt/atr/atr ./atr
COPY --from=builder /opt/atr/migrations ./migrations
COPY --from=builder /opt/atr/patches ./patches
COPY --from=builder /opt/atr/scripts ./scripts
COPY --from=builder /opt/atr/Makefile .
COPY --from=builder /opt/atr/alembic.ini .
COPY --from=builder /opt/atr/start-atr.sh .

RUN chmod +x ./start-atr.sh

# install additional tools
ENV RAT_VERSION=0.16.1

RUN mkdir -p /opt/tools
RUN mkdir -p /tmp/apache-rat
WORKDIR /tmp/apache-rat
RUN curl -L https://dlcdn.apache.org/creadur/apache-rat-${RAT_VERSION}/apache-rat-${RAT_VERSION}-bin.tar.gz -o apache-rat.tar.gz
RUN tar -xzf apache-rat.tar.gz
RUN find apache-rat-${RAT_VERSION} -type f -name "*.jar" -exec cp {} . \;
# Rename to match expected filename if needed
RUN [ -f apache-rat-${RAT_VERSION}.jar ] || mv $(find . -maxdepth 1 -type f -name "apache-rat*.jar" | head -1) apache-rat-${RAT_VERSION}.jar
RUN mv apache-rat-${RAT_VERSION}.jar /opt/tools
RUN java -version

# TODO: We should pin the syft version
# RUN GOPATH=/usr/local go install github.com/anchore/syft/cmd/syft@latest
RUN curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

EXPOSE 4443

WORKDIR /opt/atr

CMD ["./start-atr.sh"]
